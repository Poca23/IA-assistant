from .knowledge import KnowledgeBase

def test_knowledge_crud():
    print("=== TEST KNOWLEDGE BASE CRUD COMPLET ===")
    
    kb = KnowledgeBase()
    
    # TEST 1: Cr√©ation
    print("\n1Ô∏è‚É£ TEST CR√âATION")
    entry_id = kb.create_entry(
        category="general",
        subcategory="culture",
        question="Qui a peint La Joconde ?",
        answer="L√©onard de Vinci",
        tags=["art", "renaissance"]
    )
    print(f"‚úÖ Entr√©e cr√©√©e ID: {entry_id}")
    
    # TEST 2: Lecture
    print("\n2Ô∏è‚É£ TEST LECTURE")
    data = kb.read_entries("general", "culture")
    print(f"‚úÖ Entr√©es trouv√©es: {data['metadata']['total_entries']}")
    if data["entries"]:
        print(f"   Premier: {data['entries'][0]['question']}")
    
    # TEST 3: Modification
    print("\n3Ô∏è‚É£ TEST MODIFICATION")
    success = kb.update_entry("general", "culture", entry_id, 
                             answer="L√©onard de Vinci (1503-1519)")
    print(f"‚úÖ Modification: {'OK' if success else '√âCHEC'}")
    
    # TEST 4: Suppression
    print("\n4Ô∏è‚É£ TEST SUPPRESSION")
    # Cr√©er une entr√©e temporaire
    temp_id = kb.create_entry("general", "culture", "Test suppression", "Test")
    delete_success = kb.delete_entry("general", "culture", temp_id)
    print(f"‚úÖ Suppression: {'OK' if delete_success else '√âCHEC'}")
    
    # TEST 5: Liste cat√©gories
    print("\n5Ô∏è‚É£ TEST CATEGORIES")
    categories = kb.list_categories()
    print(f"‚úÖ Cat√©gories: {list(categories.keys())}")
    
    # TEST 6: Cr√©ation multiple (pour tests suivants)
    print("\n6Ô∏è‚É£ TEST MULTIPLE")
    kb.create_entry("personal", "cuisine", "Recette p√¢tes ?", "Eau + sel + p√¢tes", ["facile"])
    kb.create_entry("general", "sciences", "Formule eau ?", "H2O", ["chimie"])
    
    # V√©rification finale
    print("\n7Ô∏è‚É£ V√âRIFICATION FINALE")
    cuisine_data = kb.read_entries("personal", "cuisine")
    science_data = kb.read_entries("general", "sciences")
    
    print(f"‚úÖ Cuisine: {cuisine_data['metadata']['total_entries']} entr√©es")
    print(f"‚úÖ Sciences: {science_data['metadata']['total_entries']} entr√©es")
    
    print("\nüéØ Tests CRUD COMPLET r√©ussis !")

if __name__ == "__main__":
    test_knowledge_crud()
